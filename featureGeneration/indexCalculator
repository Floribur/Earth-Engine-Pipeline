/* 
  Contains Scrips to calculate the different Indeces
*/

// define bands of image
var nirBandLandsat = "SR_B5"; // B8 in Sentinel
var greenBandLandsat = "SR_B3"; // B3 in Sentinel
var redBandLandsat = "SR_B4"; // B4 in Sentinel
var blueBandLandsat = "SR_B2"; // B2 in Sentinel

var nirBandSentinel = "B8"; // B8 in Sentinel
var greenBandSentinel = "B3"; // B3 in Sentinel
var redBandSentinel = "B4"; // B4 in Sentinel
var blueBandSentinel = "B2"; // B2 in Sentinel

// Calculate Normalized Difference Vegetation Index (NDVI) using normalized difference
// Formula: NDVI = (NIR - red) / (NIR + red)
// https://www.usgs.gov/landsat-missions/landsat-normalized-difference-vegetation-index
exports.NDVI = function (image, sentinel) {
  // depending on image collection (sentinel vs. landsat) , other bands have to be selected:
  var nirBand = ee.List([
    ee.Algorithms.If(sentinel, nirBandSentinel, nirBandLandsat),
  ]);
  var redBand = ee.List([
    ee.Algorithms.If(sentinel, redBandSentinel, redBandLandsat),
  ]);

  var expression = "(NIR - RED) / (NIR + RED)"; // formula
  var NDVI = ee
    .Image()
    .expression({
      expression: expression,
      map: {
        NIR: image.select(nirBand),
        RED: image.select(redBand),
      },
    })
    .rename("NDVI");

  return NDVI;
};

// Calculate Normalized Difference Water Index (NDWI) using normalized difference
// Formula: NDWI = (Green - NIR) / (Green + NIR) (based on formula from McFeeters 1996, used by Mananze)
exports.NDWI = function (image, sentinel) {
  // depending on image collection (sentinel vs. landsat) , other bands have to be selected:
  var nirBand = ee.List([
    ee.Algorithms.If(sentinel, nirBandSentinel, nirBandLandsat),
  ]);
  var greenBand = ee.List([
    ee.Algorithms.If(sentinel, greenBandSentinel, greenBandLandsat),
  ]);

  var expression = "(GREEN - NIR) / (GREEN + NIR)"; // formula
  var NDWI = ee
    .Image()
    .expression({
      expression: expression,
      map: {
        NIR: image.select(nirBand),
        GREEN: image.select(greenBand),
      },
    })
    .rename("NDWI");

  return NDWI;
};

// Enhanced Vegetation Index (EVI)
// Formula: G * ( (NIR - Red) / (NIR + C1 * RED - C2 * BLUE + L) )
// https://www.usgs.gov/landsat-missions/landsat-enhanced-vegetation-index for Landsat 8 usage of formula
exports.EVI = function (image, sentinel) {
  // depending on image collection (sentinel vs. landsat) , other bands have to be selected:
  var nirBand = ee.List([
    ee.Algorithms.If(sentinel, nirBandSentinel, nirBandLandsat),
  ]);
  var redBand = ee.List([
    ee.Algorithms.If(sentinel, redBandSentinel, redBandLandsat),
  ]);
  var blueBand = ee.List([
    ee.Algorithms.If(sentinel, blueBandSentinel, blueBandLandsat),
  ]);

  // G, C1, C2, and L are the same for Landsat-8 as for Sentinel-2

  var expression = "G * ( (NIR - RED) / (NIR + C1 * RED - C2 * BLUE + L) )";
  var EVI = ee
    .Image()
    .expression({
      expression: expression,
      map: {
        NIR: image.select(nirBand),
        RED: image.select(redBand),
        BLUE: image.select(blueBand),
        G: 2.5,
        C1: 6,
        C2: 7.5,
        L: 1,
      },
    })
    .rename("EVI");
  return EVI;
};

// soil adjusted vegetation index (SAVI)
// Formula ((NIR - R) / (NIR + R + L)) * (1 + L)
// see https://www.usgs.gov/landsat-missions/landsat-soil-adjusted-vegetation-index for landsat 8
exports.SAVI = function (image, sentinel) {
  // depending on image collection (sentinel vs. landsat) , other bands have to be selected:
  var nirBand = ee.List([
    ee.Algorithms.If(sentinel, nirBandSentinel, nirBandLandsat),
  ]);
  var redBand = ee.List([
    ee.Algorithms.If(sentinel, redBandSentinel, redBandLandsat),
  ]);

  var expression = "( (NIR - RED) / (NIR + RED + L) ) * (1 + L)";
  var SAVI = ee
    .Image()
    .expression({
      expression: expression,
      map: {
        NIR: image.select(nirBand),
        RED: image.select(redBand),
        L: 0.5,
      },
    })
    .rename("SAVI");
  return SAVI;
};
